% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/saveEvents.R
\name{saveEvents}
\alias{loadEvents}
\alias{reloadEvents}
\alias{saveEvents}
\title{Save and Load all event definitions}
\usage{
saveEvents(file_name = "MyEvents", dir = "", compress = "gzip")

loadEvents(file_name = "MyEvents", dir = "")

reloadEvents(file_name = "MyEvents", dir = "")
}
\arguments{
\item{file_name}{name of file. e.g. \dQuote{MyEvents.RData}.
As an experimental feature, a \code{list} or \code{environment} can be passed
to \code{file_name}.}

\item{dir}{Directory of file (defaults to current working directory. ie. "")}

\item{compress}{argument passed to \code{\link{save}}, default is "gzip"}
}
\value{
Called for side-effect
}
\description{
Saves (loads) the .event environment to (from) disk.
}
\details{
After you have defined some events, you can use \code{saveEvents}
to save the entire .event environment to disk.

\code{loadEvents} will read a file that contains events and add
those event definitions to your .event environment.
\code{reloadEvents} will remove all instruments in the current
.event environment before loading instruments from disk.

The \code{file_name} should have a file extension of \dQuote{RData},
\dQuote{rda}, \dQuote{R}, or \dQuote{txt}.  If the \code{file_name} does not
end with one of those, \dQuote{.RData} will be appended to the
\code{file_name}

If the file extension is \dQuote{R} or \dQuote{txt}, \code{saveEvents}
will create a text file of \R code that can be \code{\link{source}}d to
load instruments back into the .event environment.
}
\examples{
\dontrun{
Auction("US.10YR.FIX", Region("US"), 1)
tmpdir <- tempdir()
saveEvents("MyEvents.RData", dir=tmpdir)
rm_events(keep.regions=FALSE)
loadEvents("MyEvents.RData", dir=tmpdir)
# write .R file that can be sourced
saveEvents("MyEvents.R", dir=tmpdir)
rm_events(keep.regions=FALSE)
loadEvents("MyEvents.R", dir=tmpdir)
#source(file=paste(tmpdir, "MyEvents.R", sep="/")) # same
unlink(tmpdir, recursive=TRUE)
}
}
\author{
Gei Lin
}
\seealso{
save, load load.instrument define_auctions, define_futures,
define_options (option_series.yahoo)
}

